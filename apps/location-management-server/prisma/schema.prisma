datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Like {
  createdAt  DateTime  @default(now())
  id         String    @id @default(cuid())
  location   Location? @relation(fields: [locationId], references: [id])
  locationId String?
  updatedAt  DateTime  @updatedAt
  user       User?     @relation(fields: [userId], references: [id])
  userId     String?
}

model Comment {
  createdAt  DateTime  @default(now())
  id         String    @id @default(cuid())
  location   Location? @relation(fields: [locationId], references: [id])
  locationId String?
  text       String?
  updatedAt  DateTime  @updatedAt
  user       User?     @relation(fields: [userId], references: [id])
  userId     String?
}

model Location {
  comments       Comment[]
  createdAt      DateTime        @default(now())
  createdBy      String?
  description    String?
  id             String          @id @default(cuid())
  image          Json?
  latitude       Float?
  likes          Like[]
  locationImages LocationImage[]
  longitude      Float?
  name           String?
  ratings        Rating[]
  updatedAt      DateTime        @updatedAt
}

model Rating {
  createdAt  DateTime         @default(now())
  id         String           @id @default(cuid())
  location   Location?        @relation(fields: [locationId], references: [id])
  locationId String?
  updatedAt  DateTime         @updatedAt
  user       User?            @relation(fields: [userId], references: [id])
  userId     String?
  value      EnumRatingValue?
}

model User {
  comments  Comment[]
  createdAt DateTime  @default(now())
  email     String?   @unique
  firstName String?
  id        String    @id @default(cuid())
  lastName  String?
  likes     Like[]
  password  String
  ratings   Rating[]
  roles     Json
  updatedAt DateTime  @updatedAt
  username  String    @unique
}

model LocationImage {
  createdAt  DateTime  @default(now())
  id         String    @id @default(cuid())
  isPrimary  Boolean?
  location   Location? @relation(fields: [locationId], references: [id])
  locationId String?
  updatedAt  DateTime  @updatedAt
  url        Json?
}

enum EnumRatingValue {
  Option1
}
