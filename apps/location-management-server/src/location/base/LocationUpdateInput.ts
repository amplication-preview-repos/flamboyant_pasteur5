/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CommentUpdateManyWithoutLocationsInput } from "./CommentUpdateManyWithoutLocationsInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  MaxLength,
  IsNumber,
  Min,
  Max,
} from "class-validator";
import { Type } from "class-transformer";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { LikeUpdateManyWithoutLocationsInput } from "./LikeUpdateManyWithoutLocationsInput";
import { LocationImageUpdateManyWithoutLocationsInput } from "./LocationImageUpdateManyWithoutLocationsInput";
import { RatingUpdateManyWithoutLocationsInput } from "./RatingUpdateManyWithoutLocationsInput";

@InputType()
class LocationUpdateInput {
  @ApiProperty({
    required: false,
    type: () => CommentUpdateManyWithoutLocationsInput,
  })
  @ValidateNested()
  @Type(() => CommentUpdateManyWithoutLocationsInput)
  @IsOptional()
  @Field(() => CommentUpdateManyWithoutLocationsInput, {
    nullable: true,
  })
  comments?: CommentUpdateManyWithoutLocationsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  createdBy?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  image?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  latitude?: number | null;

  @ApiProperty({
    required: false,
    type: () => LikeUpdateManyWithoutLocationsInput,
  })
  @ValidateNested()
  @Type(() => LikeUpdateManyWithoutLocationsInput)
  @IsOptional()
  @Field(() => LikeUpdateManyWithoutLocationsInput, {
    nullable: true,
  })
  likes?: LikeUpdateManyWithoutLocationsInput;

  @ApiProperty({
    required: false,
    type: () => LocationImageUpdateManyWithoutLocationsInput,
  })
  @ValidateNested()
  @Type(() => LocationImageUpdateManyWithoutLocationsInput)
  @IsOptional()
  @Field(() => LocationImageUpdateManyWithoutLocationsInput, {
    nullable: true,
  })
  locationImages?: LocationImageUpdateManyWithoutLocationsInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  longitude?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: () => RatingUpdateManyWithoutLocationsInput,
  })
  @ValidateNested()
  @Type(() => RatingUpdateManyWithoutLocationsInput)
  @IsOptional()
  @Field(() => RatingUpdateManyWithoutLocationsInput, {
    nullable: true,
  })
  ratings?: RatingUpdateManyWithoutLocationsInput;
}

export { LocationUpdateInput as LocationUpdateInput };
